{"uid":"e5401c39f36cd9d8","name":"test_lists","fullName":"tests.pytest.test_pytest#test_lists","historyId":"4031f3b48648592c8fc99973ccb643c7","time":{"start":1755001986227,"stop":1755001986280,"duration":53},"status":"skipped","statusMessage":"XFAIL\n\nAssertionError: assert [1, 2, 3] == [1, 2, 4]\n  \n  At index 2 diff: \u001B[0m\u001B[94m3\u001B[39;49;00m\u001B[90m\u001B[39;49;00m != \u001B[0m\u001B[94m4\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \n  Full diff:\n  \u001B[0m\u001B[90m \u001B[39;49;00m [\u001B[90m\u001B[39;49;00m\n  \u001B[90m \u001B[39;49;00m     1,\u001B[90m\u001B[39;49;00m\n  \u001B[90m \u001B[39;49;00m     2,\u001B[90m\u001B[39;49;00m...\n  \n  ...Full output truncated (5 lines hidden), use '-vv' to show","statusTrace":"@pytest.mark.xfail\n    def test_lists():\n>       assert [1, 2, 3] == [1, 2, 4]\nE       AssertionError: assert [1, 2, 3] == [1, 2, 4]\nE         \nE         At index 2 diff: \u001B[0m\u001B[94m3\u001B[39;49;00m\u001B[90m\u001B[39;49;00m != \u001B[0m\u001B[94m4\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \nE         Full diff:\nE         \u001B[0m\u001B[90m \u001B[39;49;00m [\u001B[90m\u001B[39;49;00m\nE         \u001B[90m \u001B[39;49;00m     1,\u001B[90m\u001B[39;49;00m\nE         \u001B[90m \u001B[39;49;00m     2,\u001B[90m\u001B[39;49;00m...\nE         \nE         ...Full output truncated (5 lines hidden), use '-vv' to show\n\ntests\\pytest\\test_pytest.py:29: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1755001775082,"stop":1755001775083,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"pytestconfig","time":{"start":1755001775082,"stop":1755001775082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_verify_url","time":{"start":1755001775082,"stop":1755001775082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_url","time":{"start":1755001775082,"stop":1755001775082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests.pytest"},{"name":"suite","value":"test_pytest"},{"name":"host","value":"NB-6956"},{"name":"thread","value":"23192-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.pytest.test_pytest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"e5401c39f36cd9d8.json","parameterValues":[]}